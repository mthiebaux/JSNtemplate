
Client localStorage:

	{
		profiles:	{
			"A": {
				"registration":	"XXX-XXX"
			},
			"B": {
				"registration":	"XXX-XXX"
			}
		}
	}

Client client_info:

	{
		name: "A",
		registration: "XXX-XXX",
		socket:		<websocket-handle>
		interval:	null,
		pingout:	false
	}

Client POST register:

	let register_obj = {
		name:		"A",
		password:	"a"
	}

Client WebSocket connect:

	let connect_obj = {
		token: "connect",
		client: {
			name: "A",
			registration: "XXX-XXX"
		}
	}

Client WebSocket forward message:

	let message_obj = {
		token: "forward",
		client: {
			name: "A",
			registration: "XXX-XXX"
		},
		to: [],
		payload: {
			token: "message",
			message: "ping"
		}
	}

Client WebSocket receive message:

	let forward_obj = {
		token: "recv",
		from: "A",
		payload: {
			token: "message",
			message: "ping"
		}
	};

/////////////////////////

Server JSON, profiles:

	{
		"A": {
			"password": "a",
			"registration": "XXX-XXX"
		},
		"B": {
			"password": "b",
			"registration": "XXX-XXX"
		}
	}

Server client_connections:

	{
		"A": {
			profile:	{
				password: "a",
				registration: "XXX-XXX"
			},
			socket: <websocket-handle>
		}
	}

Server register response:

	let output_obj = {
		report: { <request-report> },
		result: {
			msg: "registered",
			registration: "XXX-XXX"
		}
	}

